#!/usr/bin/env -S node --no-warnings --stack-trace-limit=1000

require("events").EventEmitter.defaultMaxListeners = 0

const { cli, dbug } = require("@foundernetes/blueprint")
const yarn = require("~/utils/yarn")

// eslint-disable-next-line import/no-unresolved, import/extensions
const requireMap = require("~/build/require-map")

const pk = require("./package.json")

dbug.registerGlobal()

global.stdinReadBuffer = new Promise((res, rej) => {
  const { stdin } = process
  const chunks = []
  stdin.on("data", (chunk) => {
    chunks.push(Buffer.from(chunk))
  })
  stdin.on("end", () => {
    const buffer = Buffer.concat(chunks)
    res(buffer)
  })
  stdin.on("error", (err) => {
    rej(err)
  })
})

const main = async () => {
  await yarn()

  await cli(process.argv, {
    customProgram: {
      name: "sniper",
      version: pk.version,
      description: pk.description,
      enabledCommands: ["snippet"],
    },
    defaultCommand: "snippet",
    requireMap,
  })
}

main()
